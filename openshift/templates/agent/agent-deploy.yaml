---
kind: Template
apiVersion: v1
metadata:
  name: ${NAME}${SUFFIX}
objects:

  - kind: NetworkSecurityPolicy
    apiVersion: security.devops.gov.bc.ca/v1alpha1
    metadata:
      name: pods-to-k8s-api${SUFFIX}
      labels:
        name: pods-to-k8s-api${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow pods to talk to the internal k8s api so deployments work.
        This only needs to be specified once per environment.
      source:
        - - $namespace=${NAMESPACE}-${TAG_NAME}
      destination:
        - - int:network=internal-cluster-api-endpoint

  - kind: ExternalNetwork
    apiVersion: security.devops.gov.bc.ca/v1alpha1
    metadata:
      name: ${NAME}${SUFFIX}
      network: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        network: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        env: ${TAG_NAME}
    spec:
      description: |
        Define the network parameters for accessing remote agents.
      entries:
        - 0.0.0.0/0
      servicePorts:
        - tcp/9700:9799
        - tcp/80
        - tcp/443

  - kind: NetworkSecurityPolicy
    apiVersion: security.devops.gov.bc.ca/v1alpha1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow the agent pods to communicate with external agents, internal controller pods, and the wallet.
      source:
        - - role=${ROLE}
          - app=${APP_NAME}${SUFFIX}
          - env=${TAG_NAME}
          - $namespace=${NAMESPACE}-${TAG_NAME}
      destination:
        - - ext:name=${NAME}${SUFFIX}
        - - role=${CONTROLLER_ROLE}
          - app=${APP_NAME}${SUFFIX}
          - env=${TAG_NAME}
          - $namespace=${NAMESPACE}-${TAG_NAME}
        - - role=${WALLET_ROLE}
          - app=${APP_NAME}${SUFFIX}
          - env=${TAG_NAME}
          - $namespace=${NAMESPACE}-${TAG_NAME}

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: ${NAME}-admin
          port: ${{AGENT_ADMIN_PORT}}
          protocol: TCP
          targetPort: ${{AGENT_ADMIN_PORT}}
        - name: ${NAME}-http
          port: ${{AGENT_HTTP_PORT}}
          protocol: TCP
          targetPort: ${{AGENT_HTTP_PORT}}
        - name: ${NAME}-ws
          port: ${{AGENT_WS_PORT}}
          protocol: TCP
          targetPort: ${{AGENT_WS_PORT}}
      selector:
        name: ${NAME}${SUFFIX}

  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        haproxy.router.openshift.io/timeout: ${ROUTE_TIMEOUT}
    spec:
      host: ${APPLICATION_DOMAIN}
      port:
        targetPort: ${NAME}-http
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${WALLET_CREDENTIAL_STORE_NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      key: ${WALLET_KEY}
      seed: ${AGENT_WALLET_SEED}
      did: ${WALLET_DID}
    type: Opaque

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      admin-api-key: ${ADMIN_API_KEY}
    type: Opaque

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}${SUFFIX}
      strategy:
        type: Rolling
      template:
        metadata:
          name: ${NAME}${SUFFIX}
          labels:
            name: ${NAME}${SUFFIX}
            app: ${APP_NAME}${SUFFIX}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          containers:
            - name: ${NAME}${SUFFIX}
              command:
                # Note:
                #  - The wallet-name cannot contain '-'s.
                - bash
                - -c
                - $(echo aca-py start
                  --inbound-transport http '0.0.0.0' ${HTTP_INTERFACE_PORT}
                  --inbound-transport ws '0.0.0.0' ${WS_INTERFACE_PORT}
                  --endpoint ${AGENT_ENDPOINT}
                  --outbound-transport ws
                  --outbound-transport http
                  --genesis-url "${GENESIS_URL}"
                  --auto-accept-invites
                  --auto-accept-requests
                  --auto-ping-connection
                  --auto-respond-messages
                  --auto-respond-credential-offer
                  --auto-respond-presentation-request
                  --auto-verify-presentation
                  --wallet-type 'indy'
                  --wallet-name "$(echo ${AGENT_WALLET_NAME} | tr '[:upper:]' '[:lower:]' | sed "s~-~_~g")"
                  --wallet-key "${WALLET_ENCRYPTION_KEY}"
                  --wallet-storage-type "${WALLET_TYPE}"
                  --wallet-storage-config "$(eval echo \"${WALLET_STORAGE_CONFIGURATION}\")"
                  --wallet-storage-creds "$(eval echo \"${WALLET_STORAGE_CREDENTIALS}\")"
                  --seed "${WALLET_SEED}"
                  --admin '0.0.0.0' ${ADMIN_INTERFACE_PORT}
                  $([ ! -z "${AGENT_ADMIN_API_KEY}" ] && echo "--admin-api-key ${AGENT_ADMIN_API_KEY}" || echo "--admin-insecure-mode")
                  --label "${AGENT_NAME}"
                  --log-level ${AGENT_LOG_LEVEL}
                  ${TIMING:+--timing}
                  ${READ_ONLY_LEDGER:+--read-only-ledger}
                  --plugin indy_catalyst_issuer_registration
                  ${TRACING:+--trace}
                  ${TRACE_TARGET:+--trace-target ${TRACE_TARGET}}
                  ${TRACE_TAG:+--trace-tag ${TRACE_TAG}}
                  ${TRACE_LABEL:+--trace-label $(eval echo \"${TRACE_LABEL}\")});
              env:
                - name: GENESIS_URL
                  value: ${GENESIS_FILE_URL}
                - name: AGENT_WALLET_NAME
                  value: ${NAME}${SUFFIX}-wallet
                - name: WALLET_TYPE
                  value: ${WALLET_STORAGE_TYPE}
                - name: POSTGRESQL_WALLET_HOST
                  value: ${WALLET_HOST}${SUFFIX}
                - name: POSTGRESQL_WALLET_PORT
                  value: ${WALLET_HOST_PORT}
                - name: WALLET_STORAGE_CONFIGURATION
                  value: ${WALLET_STORAGE_CONFIG}
                - name: WALLET_STORAGE_CREDENTIALS
                  value: ${WALLET_STORAGE_CREDS}
                - name: POSTGRESQL_WALLET_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_HOST}${SUFFIX}
                      key: database-user
                - name: POSTGRESQL_WALLET_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_HOST}${SUFFIX}
                      key: database-password
                - name: POSTGRESQL_WALLET_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_HOST}${SUFFIX}
                      key: admin-password
                - name: WALLET_ENCRYPTION_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_CREDENTIAL_STORE_NAME}${SUFFIX}
                      key: key
                - name: WALLET_SEED
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_CREDENTIAL_STORE_NAME}${SUFFIX}
                      key: seed
                - name: WALLET_DID
                  valueFrom:
                    secretKeyRef:
                      name: ${WALLET_CREDENTIAL_STORE_NAME}${SUFFIX}
                      key: did
                - name: WEBHOOK_URL
                  value: ${WEBHOOK_URL}
                - name: HTTP_INTERFACE_PORT
                  value: ${AGENT_HTTP_PORT}
                - name: WS_INTERFACE_PORT
                  value: ${AGENT_WS_PORT}
                - name: ADMIN_INTERFACE_PORT
                  value: ${AGENT_ADMIN_PORT}
                - name: AGENT_ADMIN_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: admin-api-key
                - name: AGENT_NAME
                  value: ${AGENT_LABEL_NAME}
                - name: AGENT_ENDPOINT
                  value: ${AGENT_BASE_URL}
                - name: AGENT_LOG_LEVEL
                  value: ${LOG_LEVEL}
                - name: TIMING
                  value: ${AGENT_TIMING}
                - name: READ_ONLY_LEDGER
                  value: ${AGENT_READ_ONLY_LEDGER}
                - name: TRACING
                  value: ${AGENT_TRACING}
                - name: TRACE_TARGET
                  value: ${AGENT_TRACE_TARGET}
                - name: TRACE_TAG
                  value: ${AGENT_TRACE_TAG}
                - name: TRACE_LABEL
                  value: ${AGENT_TRACE_LABEL}
              image:
              ports:
                - containerPort: ${{AGENT_ADMIN_PORT}}
                  protocol: TCP
                - containerPort: ${{AGENT_HTTP_PORT}}
                  protocol: TCP

              readinessProbe:
                timeoutSeconds: 30
                initialDelaySeconds: 3
                exec:
                  command:
                    - bash
                    - "-c"
                    - 'curl --fail "http://localhost:${ADMIN_INTERFACE_PORT}/status/ready" -H "X-API-KEY: ${AGENT_ADMIN_API_KEY}"'
              livenessProbe:
                timeoutSeconds: 30
                initialDelaySeconds: 300
                exec:
                  command:
                    - bash
                    - "-c"
                    - 'curl --fail "http://localhost:${ADMIN_INTERFACE_PORT}/status/live" -H "X-API-KEY: ${AGENT_ADMIN_API_KEY}"'

              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              name: ${NAME}:${TAG_NAME}
              namespace: ${IMAGE_NAMESPACE}

  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${NAME}${SUFFIX}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}

parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all the objects defined in this template.
    required: true
    value: agent
  - name: ROLE
    displayName: Role
    description: Role
    required: true
    value: agent
  - name: CONTROLLER_ROLE
    displayName: Controller Role
    description: The name given to the controller role.
    required: true
    value: controller
  - name: WALLET_ROLE
    displayName: Wallet Role
    description: The name given to the wallet role.
    required: true
    value: wallet
  - name: NAMESPACE
    displayName: The target namespace for the resources.
    required: true
    value: a3e512
  - name: SUFFIX
    displayName: Suffix
    description: A name suffix used for all objects.
    required: false
    value: -primary
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: EmprPermitAgent
  - name: APP_GROUP
    displayName: App Group
    description: Used to group components together.
    required: true
    value: primary-instance
  - name: APPLICATION_DOMAIN
    displayName: Application Hostname
    description: The exposed hostname that will route to the service, if left blank a value will be defaulted.
    required: false
    value: empr-permits-agent-primary-dev.apps.silver.devops.gov.bc.ca
  - name: ROUTE_TIMEOUT
    displayName: Route Timeout
    description: The timeout for the application route.  When this timeout is exceeded the application's route will respond with a 504 Gateway Timeout error.
    required: true
    value: 120s
  - name: IMAGE_NAMESPACE
    displayName: Namespace containing application images.
    required: true
    value: a3e512-tools
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod.
    required: true
    value: dev
  - name: AGENT_LABEL_NAME
    displayName: Agent Label/Name
    description: The label/name of the agent
    required: true
    value: empr-permits-agent
  - name: AGENT_BASE_URL
    displayName: Agent endpoint
    description: The endpoint of the agent
    required: true
    value: https://empr-permits-agent-primary-dev.apps.silver.devops.gov.bc.ca
  - name: WEBHOOK_URL
    displayName: Webhook URL
    description: The webhook endpoint
    required: true
    value: http://empr-permits-controller-primary:8080/api/agentcb
  - name: AGENT_ADMIN_PORT
    displayName: Agent Admin Port
    description: The admin port on which the service will listen.
    required: true
    value: "8024"
  - name: ADMIN_API_KEY
    displayName: Agent Admin API Key
    description: The key used to authenticate client requests to the admin api.
    required: true
    generate: expression
    from: "[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}"
  - name: AGENT_HTTP_PORT
    displayName: Agent Http Port
    description: The http port on which the service will listen.
    required: true
    value: "8021"
  - name: AGENT_WS_PORT
    displayName: Agent WS Port
    description: The WS port on which the service will listen.
    required: true
    value: "8023"
  - name: GENESIS_FILE_URL
    displayName: Genesis File URL
    description: The URL from which the genesis file can be downloaded.
    required: true
    value: http://dev.bcovrin.vonx.io/genesis
  - name: LOG_LEVEL
    displayName: Log Level
    description: The logging level for the agent, one of 'debug', 'info', 'warning', 'error', 'critical'
    required: true
    value: WARNING
  - name: AGENT_TIMING
    displayName: Collect agent timing information.
    description: Enable/Disable collection of agent timing information.  Controls the inclusion/exclusion of the agent '--timing' startup parameter.  Defaults to disabled.
    required: false
    value: ""
  - name: AGENT_READ_ONLY_LEDGER
    displayName: Set read only ledger flag.
    description: Enable/Disable the read only ledger flag.  Controls the inclusion/exclusion of the agent '--read-only-ledger' startup parameter.  Defaults to disabled.
    required: false
    value: ""

  # ===============================================================================
  # Tracing Configuration
  #--------------------------------------------------------------------------------
  - name: AGENT_TRACING
    displayName: Enable agent tracing
    description: Enable/Disable tracing.
    required: false
    value: ""
  - name: AGENT_TRACE_TARGET
    displayName: Set the agent's trace target.
    description: Set the tracing target.  Target for trace events ("log", "message", or http endpoint).
    required: false
    value: ""
  - name: AGENT_TRACE_TAG
    displayName: Tag to be included when logging events.
    description: Tag to be included when logging events.
    required: false
    value: ""
  - name: AGENT_TRACE_LABEL
    displayName: Label (agent name) used logging events.
    description: Label (agent name) used logging events.  Supports environment variables, '${HOSTNAME}' for example.
    required: false
    value: "'${HOSTNAME}'"
  # ===============================================================================

  # ===============================================================================
  # Wallet Configuration
  #--------------------------------------------------------------------------------
  - name: WALLET_STORAGE_TYPE
    displayName: Wallet Storage Type
    description:
      The wallet storage type.  Your choice of 'postgres' or 'sqlite' at
      the moment.  If not defined, defaults to 'sqlite' for compatibility
    required: false
    value: postgres_storage
  - name: WALLET_HOST
    displayName: PostgreSql Wallet Hostname
    required: true
    description: Hostname of the deployed database hosting the wallet.  Only used when WALLET_STORAGE_TYPE = postgres_storage.
    value: wallet
  - name: WALLET_HOST_PORT
    displayName: PostgreSql Wallet Port
    required: true
    description: The port number of the deployed database hosting the wallet.  Only used when WALLET_STORAGE_TYPE = postgres_storage.
    value: "5432"
  - name: WALLET_STORAGE_CONFIG
    displayName: Wallet Storage Configuration
    required: true
    description: Wallet storage configuration
    value: '{\"url\":\"${POSTGRESQL_WALLET_HOST}:${POSTGRESQL_WALLET_PORT}\",\"max_connections\":5}'
  - name: WALLET_STORAGE_CREDS
    displayName: Wallet Storage Credential Configuration
    required: true
    description: Wallet storage credential configuration
    value: '{\"account\":\"${POSTGRESQL_WALLET_USER}\",\"password\":\"${POSTGRESQL_WALLET_PASSWORD}\",\"admin_account\":\"postgres\",\"admin_password\":\"${POSTGRESQL_WALLET_ADMIN_PASSWORD}\"}'
  - name: WALLET_CREDENTIAL_STORE_NAME
    displayName: Wallet Credential Store Name
    description:
      The name of the wallet credential store (aka The name of the secret
      that contains the wallet credentials).
    required: true
    value: agent-wallet-credentials
  - name: WALLET_KEY
    displayName: Wallet Encryption Key
    description: The encryption key to be used for the wallets.  Needs to be basee64 encoded.
    required: true
    generate: expression
    from: "[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}"
  - name: AGENT_WALLET_SEED
    displayName: Wallet Seed
    description: The Seed used for the agent's wallet.  Needs to be basee64 encoded.
    required: true
    generate: expression
    from: "[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}"
  - name: WALLET_DID
    displayName: Indy Wallet DID
    description: The DID associated to the indy wallet.  Needs to be basee64 encoded.
    required: false
    generate: expression
    from: "[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}"
  # ===============================================================================
  - name: MIN_REPLICAS
    displayName: Minimum Replicas
    description: The minimum number of pods to have running.
    required: true
    value: "2"
  - name: MAX_REPLICAS
    displayName: Maximum Replicas
    description: The maximum number of pods to have running.
    required: true
    value: "21"
  # ===============================================================================
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 750m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 512Mi
