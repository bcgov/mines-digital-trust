{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "${NAME}-deployment-template",
    "annotations": {
      "description": "Deployment template for a ${NAME} instance."
    }
  },
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}${SUFFIX}",
        "labels": {
          "name": "${NAME}${SUFFIX}",
          "app": "${APP_NAME}${SUFFIX}",
          "app-group": "${APP_GROUP}",
          "role": "${ROLE}",
          "env": "${TAG_NAME}"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "${NAME}-http",
            "port": "${{HOST_PORT}}",
            "protocol": "TCP",
            "targetPort": "${{HOST_PORT}}"
          }
        ],
        "selector": {
          "name": "${NAME}${SUFFIX}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}${SUFFIX}",
        "labels": {
          "name": "${NAME}${SUFFIX}",
          "app": "${APP_NAME}${SUFFIX}",
          "app-group": "${APP_GROUP}",
          "role": "${ROLE}",
          "env": "${TAG_NAME}"
        },
        "annotations": {
          "haproxy.router.openshift.io/timeout": "${ROUTE_TIMEOUT}"
        }
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "port": {
          "targetPort": "${NAME}-http"
        },
        "tls": {
          "insecureEdgeTerminationPolicy": "Redirect",
          "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "${NAME}${SUFFIX}",
          "weight": 100
        }
      }
    },
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}${SUFFIX}",
        "labels": {
          "name": "${NAME}${SUFFIX}",
          "app": "${APP_NAME}${SUFFIX}",
          "app-group": "${APP_GROUP}"
        }
      },
      "stringData": {
        "cr-agent-admin-api-url": "${CR_AGENT_ADMIN_URL}",
        "cr-agent-admin-api-key": "${CR_ADMIN_API_KEY}",
        "issuer-secret-key": "${ISSUER_SECRET_KEY}"
      },
      "type": "Opaque"
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}${SUFFIX}",
        "labels": {
          "name": "${NAME}${SUFFIX}",
          "app": "${APP_NAME}${SUFFIX}",
          "app-group": "${APP_GROUP}"
        },
        "annotations": {
          "description": "Defines how to deploy the container."
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "rollingParams": {
            "updatePeriodSeconds": 1,
            "intervalSeconds": 1,
            "timeoutSeconds": 600,
            "maxUnavailable": "25%",
            "maxSurge": "25%"
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}${SUFFIX}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${IMAGE_NAMESPACE}",
                "name": "${NAME}:${TAG_NAME}"
              }
            }
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}${SUFFIX}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}${SUFFIX}",
            "labels": {
              "name": "${NAME}${SUFFIX}",
              "app": "${APP_NAME}${SUFFIX}",
              "app-group": "${APP_GROUP}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}${SUFFIX}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": "${{HOST_PORT}}",
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "CONFIG_ROOT",
                    "value": "${CONFIG_ROOT}"
                  },
                  {
                    "name": "HOST_PORT",
                    "value": "${HOST_PORT}"
                  },
                  {
                    "name": "ENVIRONMENT",
                    "value": "${ENVIRONMENT}"
                  },
                  {
                    "name": "AGENT_ADMIN_URL",
                    "value": "http://${AGENT_SERVICE_NAME}${SUFFIX}:${AGENT_ADMIN_PORT}"
                  },
                  {
                    "name": "AGENT_ADMIN_API_KEY",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${AGENT_SERVICE_NAME}${SUFFIX}",
                        "key": "admin-api-key"
                      }
                    }
                  },
                  {
                    "name": "TOB_AGENT_ADMIN_URL",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}${SUFFIX}",
                        "key": "cr-agent-admin-api-url"
                      }
                    }
                  },
                  {
                    "name": "TOB_ADMIN_API_KEY",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}${SUFFIX}",
                        "key": "cr-agent-admin-api-key"
                      }
                    }
                  },
                  {
                    "name": "TOB_CONNECTION_NAME",
                    "value": "${CR_CONNECTION_NAME}"
                  },
                  {
                    "name": "TOB_API_URL",
                    "value": "${CR_API_URL}"
                  },
                  {
                    "name": "TOB_APP_URL",
                    "value": "${CR_APP_URL}"
                  },
                  {
                    "name": "SECRET_KEY",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}${SUFFIX}",
                        "key": "issuer-secret-key"
                      }
                    }
                  },
                  {
                    "name": "WEB_CONCURRENCY",
                    "value": "${WEB_CONCURRENCY}"
                  },
                  {
                    "name": "WORKER_THREADS",
                    "value": "${WORKER_THREADS}"
                  },
                  {
                    "name": "MAX_CRED_RESPONSE_TIMEOUT",
                    "value": "${MAX_CRED_RESPONSE_TIMEOUT}"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 30,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/health",
                    "port": "${{HOST_PORT}}"
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 30,
                  "initialDelaySeconds": 300,
                  "httpGet": {
                    "path": "/health",
                    "port": "${{HOST_PORT}}"
                  }
                },
                "resources": {
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  },
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "HorizontalPodAutoscaler",
      "apiVersion": "autoscaling/v1",
      "metadata": {
        "name": "${NAME}${SUFFIX}",
        "labels": {
          "name": "${NAME}${SUFFIX}",
          "app": "${APP_NAME}${SUFFIX}",
          "app-group": "${APP_GROUP}"
        }
      },
      "spec": {
        "scaleTargetRef": {
          "kind": "DeploymentConfig",
          "name": "${NAME}${SUFFIX}"
        },
        "minReplicas": "${{MIN_REPLICAS}}",
        "maxReplicas": "${{MAX_REPLICAS}}"
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the objects defined in this template.",
      "required": true,
      "value": "issuer"
    },
    {
      "name": "ROLE",
      "displayName": "Role",
      "description": "Role",
      "required": true,
      "value": "issuer"
    },
    {
      "name": "AGENT_ROLE",
      "displayName": "Agent Role",
      "description": "The name given to the agent role.",
      "required": true,
      "value": "agent"
    },
    {
      "name": "WALLET_ROLE",
      "displayName": "Wallet Role",
      "description": "The name given to the wallet role.",
      "required": true,
      "value": "wallet"
    },
    {
      "name": "NAMESPACE",
      "displayName": "The target namespace for the resources.",
      "required": true,
      "value": "a3e512"
    },
    {
      "name": "SUFFIX",
      "displayName": "Suffix",
      "description": "A name suffix used for all objects",
      "required": false,
      "value": "-primary"
    },
    {
      "name": "APP_NAME",
      "displayName": "App Name",
      "description": "Used to group components together in the OpenShift console.",
      "required": true,
      "value": "MinesDigitalTrust"
    },
    {
      "name": "APP_GROUP",
      "displayName": "App Group",
      "description": "The name assigned to all of the deployments in this project.",
      "required": true,
      "value": "mines-permitting"
    },
    {
      "name": "IMAGE_NAMESPACE",
      "displayName": "Image Namespace",
      "required": true,
      "description": "The namespace of the OpenShift project containing the imagestream for the application.",
      "value": "a3e512-tools"
    },
    {
      "name": "TAG_NAME",
      "displayName": "Environment TAG name",
      "description": "The TAG name for this environment, e.g., dev, test, prod",
      "required": true,
      "value": "dev"
    },
    {
      "name": "CONFIG_ROOT",
      "displayName": "Config Root",
      "description": "The root directory containing the application configuration.",
      "required": true,
      "value": "./config"
    },
    {
      "name": "HOST_PORT",
      "displayName": "Host Port",
      "description": "The port on which the agent service will listen.",
      "required": true,
      "value": "8080"
    },
    {
      "name": "ENVIRONMENT",
      "displayName": "Environment",
      "description": "The application environment.",
      "required": true,
      "value": "default"
    },
    {
      "name": "AGENT_SERVICE_NAME",
      "displayName": "Agent Service name",
      "description": "Agent service name",
      "required": true,
      "value": "mines-permitting-agent"
    },
    {
      "name": "AGENT_ADMIN_PORT",
      "displayName": "Agent Admin Port",
      "description": "Agent admin port",
      "required": true,
      "value": "8024"
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the service, if left blank a value will be defaulted.",
      "required": false,
      "value": "bcgov-mines-permitting-issuer-dev.apps.silver.devops.gov.bc.ca"
    },
    {
      "name": "ROUTE_TIMEOUT",
      "displayName": "Route Timeout",
      "description": "The timeout for the application route.  When this timeout is exceeded the application's route will respond with a 504 Gateway Timeout error.",
      "required": true,
      "value": "120s"
    },
    {
      "name": "CR_AGENT_ADMIN_URL",
      "displayName": "Credential Registry Admin API Url",
      "description": "Credential registry admin api url",
      "required": false,
      "value": ""
    },
    {
      "name": "CR_ADMIN_API_KEY",
      "displayName": "Credential Registry Admin API Key",
      "description": "Credential registry admin api key",
      "required": false,
      "value": ""
    },
    {
      "name": "CR_CONNECTION_NAME",
      "displayName": "Credential Registry Connection/Agent Name",
      "description": "Credential Registry Connection/Agent Name",
      "required": true,
      "value": "icob-agent"
    },
    {
      "name": "CR_API_URL",
      "displayName": "Credential API URL",
      "description": "Credential API URL",
      "required": true,
      "value": "https://agent-dev.orgbook.gov.bc.ca"
    },
    {
      "name": "CR_APP_URL",
      "displayName": "Credential Application URL",
      "description": "Credential Application URL",
      "required": true,
      "value": "https://dev.orgbook.gov.bc.ca"
    },
    {
      "name": "ISSUER_SECRET_KEY",
      "displayName": "Issuer Protected API Key",
      "description": "The key used to authenticate client requests to the issuer protected api.",
      "required": true,
      "generate": "expression",
      "from": "[a-zA-Z0-9_]{16}"
    },
    {
      "name": "WEB_CONCURRENCY",
      "displayName": "Web Concurrency",
      "description": "Sets the number of worker processes.",
      "required": true,
      "value": "1"
    },
    {
      "name": "WORKER_THREADS",
      "displayName": "Worker Threads",
      "description": "Sets the maximum number of worker threads.",
      "required": true,
      "value": "160"
    },
    {
      "name": "MAX_CRED_RESPONSE_TIMEOUT",
      "displayName": "Maximum Credential Response Timeout",
      "description": "Sets the maximum time (in seconds) to wait for a credential response message before giving up.",
      "required": true,
      "value": "90"
    },
    {
      "name": "MIN_REPLICAS",
      "displayName": "Minimum Replicas",
      "description": "The minimum number of pods to have running.",
      "required": true,
      "value": "1"
    },
    {
      "name": "MAX_REPLICAS",
      "displayName": "Maximum Replicas",
      "description": "The maximum number of pods to have running.",
      "required": true,
      "value": "1"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "Resources CPU Request",
      "description": "The resources CPU request (in cores) for this build.",
      "required": true,
      "value": "10m"
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "Resources CPU Limit",
      "description": "The resources CPU limit (in cores) for this build.",
      "required": true,
      "value": "1000m"
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Resources Memory Request",
      "description": "The resources Memory request (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "10Mi"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Resources Memory Limit",
      "description": "The resources Memory limit (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "1000Mi"
    }
  ]
}
