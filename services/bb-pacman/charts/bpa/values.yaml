# Default values for helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  nameOverride: ""
  fullnameOverride: ""

  persistence:
    # -- If true, the Postgres chart is deployed
    deployPostgres: true

bpa:
  name: bpacore
 
  image:
    repository: image-registry.openshift-image-registry.svc:5000/f6b17d-tools/bbcm-app
    pullPolicy: IfNotPresent
    # --  Overrides the image tag whose default is the chart appVersion.
    tag: "dev"

  # -- enable security (username and password)
  securityEnabled: true
  
  # -- Default username
  userName: admin
  
  # -- Default password, overwrite default if running in production like environments
  password: changeme

  # --  Run in did:web mode with read only ledger. If set to true acapy.readOnlyMode has to be true too.
  webMode: false

  # --  Uni Resolver URL
  resolverURL: https://resolver.stage.economyofthings.io
  
  # --  The ledger prefix that is configured with the Uni Resolver
  didPrefix: "did:sov:"

  # --  The Ledger URL
  ledgerURL: http://dev.bcovrin.vonx.io
  
  # --  The Ledger Explorer  
  ledgerBrowser: http://dev.bcovrin.vonx.io

  # -- The Agent Name as it should be displayed in the UI
  agentName: "Business Partner Agent"

  # schemas to be configured initially (further schemas can be configured by the user in the frontend)
  schemas:
    commercialregister:
     id: "3gLVpb3i5jzvZqWYyesSB3:2:commercialregister:1.2"
    bankaccount:
     id: "M6Mbe3qx7vB4wpZF4sBRjt:2:bank_account:1.0"

  imagePullSecrets: []
 
  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: my-bpa.local
        paths: []
    tls: []
    #  - secretName: my-bpa-tls
    #    hosts:
    #      - my-bpa.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  https: https 
acapy:
  name: acapy

  image:
    repository: bcgovimages/aries-cloudagent
    pullPolicy: IfNotPresent
    # --  Overrides the image tag whose default is the chart appVersion.
    tag: py36-1.16-0_0.6.0

  adminURLApiKey: 2f9729eef0be49608c1cffd49ee3cc4a

  agentName: ca-aca-py

  readOnlyMode: false

  imagePullSecrets: [] 
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    adminPort: 8031
    httpPort: 8030

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: my-acapy.local
        paths: []
    tls: []
    #  - secretName: my-acapy-tls
    #    hosts:
    #      - my-acapy.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

postgresql:
  # --  PostgreSQL service configuration
  service:
    port: 5432

  # --  PostgreSQL User to create.
  postgresqlUsername: bpa

  # --  PostgreSQL Password for the new user. If not set, a random 10 characters password will be used.
  postgresqlPassword: change-me

  # -- PostgreSQL Database to create.
  postgresqlDatabase: bpa

  # --  Persistent Volume Storage configuration. ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  persistence:
    
    # -- Enable PostgreSQL persistence using Persistent Volume Claims.
    enabled: true
  image:
    tag: 12

  securityContext:
    enabled: false
  containerSecurityContext:
    enabled: false
